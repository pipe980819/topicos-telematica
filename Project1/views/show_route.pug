extends layout

block content
    h2 Your route to #{title}
    br
    .row
        .col-lg-2
            p 
                b Choose your model of travel:
        .col-lg-2
            select#mode.form-control(onchange='initMap();')
                option(value='DRIVING') Driving
                option(value='WALKING') Walking
                option(value='BICYCLING') Bicycling
    br
    // The div element for the map
    #map
    br
    #directions-panel.jumbotron

    script.
        var points = !{JSON.stringify(points)};

        function initMap() {
            var map;
            map = new google.maps.Map(document.getElementById('map'), {
                    center: {lat: parseFloat(points[0].latitude), lng: parseFloat(points[0].longitude)},
                    zoom: 15
            });
            var directionsService = new google.maps.DirectionsService;
            var directionsDisplay = new google.maps.DirectionsRenderer;
            directionsDisplay.setMap(map);
            calculateAndDisplayRoute(directionsService, directionsDisplay);
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay){
            var waypts = [];
            var selectedMode = document.getElementById('mode').value;
            for (var i = 1; i < points.length-1; i++) {
                waypts.push({
                location: new google.maps.LatLng(points[i].latitude, points[i].longitude),
                stopover: true
                });
            }

            directionsService.route({
                origin: new google.maps.LatLng(points[0].latitude, points[0].longitude),
                destination: new google.maps.LatLng(points[points.length-1].latitude, points[points.length-1].longitude),
                waypoints: waypts,
                optimizeWaypoints: true,
                travelMode: google.maps.TravelMode[selectedMode]
            }, function(response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                    var route = response.routes[0];
                    var summaryPanel = document.getElementById('directions-panel');
                    summaryPanel.innerHTML = '';
                    // For each route, display summary information.
                    for (var i = 0; i < route.legs.length; i++) {
                        var routeSegment = i + 1;
                        summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment + '</b><br>';
                        summaryPanel.innerHTML += '<b>Origin: </b>' + route.legs[i].start_address + '<br>';
                        summaryPanel.innerHTML += '<b>Destination: </b>' + route.legs[i].end_address + '<br>';
                        summaryPanel.innerHTML += '<b>Distance: </b>' + route.legs[i].distance.text + '<br><br>';
                    }
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }

    script(async defer src='https://maps.googleapis.com/maps/api/js?key=AIzaSyAZC2drNgge8VSt0MKNKoACprFPGsGcbeg&callback=initMap')